version: '3'

services:
###> doctrine/doctrine-bundle ###
  php:
    image: php:8.1-cli
      # target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - ./php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: mysql://${MYSQL_USER:-root}:${MYSQL_PASSWORD:-lhdev}@database:5432/${MYSQL_DB:-db_projectOne}?serverVersion=${MYSQL_VERSION:-5.7}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-localhost}|caddy$$
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}

  caddy:
    build:
      context: ./docker/caddy/
      # target: api_platform_caddy
    depends_on:
      - php
      - database
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - ./php_socket:/var/run/php
      - ./caddy_data:/data
      - ./caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
  database:
    image: mysql:${MYSQL_VERSION:-5.7}
    environment:
      MYSQL_DB: ${MYSQL_DB:-db_projectOne}
      # You should definitely change the password in production
      MYSQL_USER: userDemo
      MYSQL_PASSWORD: lhdev
      MYSQL_ROOT_PASSWORD: lhdev
    volumes:
      - db-data:/var/lib/mysql
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
